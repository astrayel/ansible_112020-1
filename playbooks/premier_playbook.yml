---
- name: "PLAY 1 - Conformité manager"
  hosts: manager

  tasks:
    - name: "Creation d'une paire de clés ssh sur manager"
      community.crypto.openssh_keypair:
        state: present
        type: ed25519
        path: id_ansible
        comment: manager@formation

- name: "PLAY 2 - Bootstrap python"
  hosts: linux
  gather_facts: false
  become: true

  tasks:
    - name: "Test ping ansible"
      ping: ~
      register: ping_output
      ignore_errors: true

    - name: "Mode raw pour test interpreteur python"
      raw: 'bash -c "test -f /usr/bin/python3"'
      ignore_errors: true
      register: test_python3_output
      when: ping_output.failed == 'true'

    - name: "Module debug pour afficher du texte ou analyse un variable"
      ansible.builtin.debug:
         #msg: "Analyse output de test python3 : {{ test_python3_output }}"
         var: test_python3_output
         verbosity: 1
      when: test_python3_output.rc is defined

    - name: "Tentative d'installation python3 en raw"
      raw: 'bash -c "(apt-get update && apt-get install -y python3) || (yum install -y python3)"'
      # Conditionals
      when: test_python3_output.rc is defined and test_python3_output.rc != 0

- name: "PLAY 2 - config playbook"
  # Target : à qui s'adresse se PLAY
  hosts: linux
  become: true

  vars_files:
    - /vagrant/vars/vars_premier_playbook.yml

  # Déclation du block tasks pour appeler des modules
  tasks:

    - name: "Module debug pour afficher du texte ou analyse un variable du precedent PLAY"
      ansible.builtin.debug:
        #msg: "Analyse output de test python3 : {{ test_python3_output }}"
        var: test_python3_output
        verbosity: 1

    - name: "Ajout groupes"
      ansible.builtin.group:
        name: "{{ item.key }}"
        state: present
      loop: "{{ users | dict2items }}"
      no_log: true

    - name: "Ajout utilisateur"
      ansible.builtin.user:
        name: "{{ item.key }}"
        state: "{{ item.value.state | default('present') }}"
        uid: "{{ item.value.uid | default(omit) }}"
        # Utilisation d'une variable du fichier d'inventaire
        shell: "{{ item.value.shell | d('/bin/bash') }}"
        groups:
          - "{{ sudogrp }}"
          - "{{ item.key }}"
        password: "{{ item.value.password | d(omit) }}"
        update_password: "{{ password_strategy | default('on_create') }}"
      loop: "{{ users | dict2items }}"
      no_log: true

    - name: "Creation d'un fichier"
      ansible.builtin.copy:
        dest: "/home/{{ item.key }}/fichier1"
        content: "Mon fichier généré par ansible"
        owner: "{{ item.key }}"
        group: "{{ item.key }}"
        mode: '0644'
        state: present
      loop: "{{ users | dict2items }}"
      no_log: true

    - name: "Ajout de la clé ed25519 du manager"
      ansible.posix.authorized_key:
        user: "{{ item.key }}"
        state: "{{ key_status }}"
        # lookup : cherche un objet de type file qui se nomme id_ansible.pub sur le manager
        key: "{{ lookup('file', 'id_ansible.pub') }}"
      loop: "{{ users | dict2items }}"
      no_log: true